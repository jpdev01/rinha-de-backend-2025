/*
 * This file is generated by jOOQ.
 */
package com.jpdev01.rinha.jooq.tables.records;


import com.jpdev01.rinha.jooq.tables.Payments;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentsRecord extends UpdatableRecordImpl<PaymentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.payments.correlation_id</code>.
     */
    public void setCorrelationId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.payments.correlation_id</code>.
     */
    public UUID getCorrelationId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.payments.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.payments.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.payments.requested_at</code>.
     */
    public void setRequestedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.payments.requested_at</code>.
     */
    public LocalDateTime getRequestedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.payments.processed_at_default</code>.
     */
    public void setProcessedAtDefault(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.payments.processed_at_default</code>.
     */
    public Boolean getProcessedAtDefault() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentsRecord
     */
    public PaymentsRecord() {
        super(Payments.PAYMENTS);
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(UUID correlationId, BigDecimal amount, LocalDateTime requestedAt, Boolean processedAtDefault) {
        super(Payments.PAYMENTS);

        setCorrelationId(correlationId);
        setAmount(amount);
        setRequestedAt(requestedAt);
        setProcessedAtDefault(processedAtDefault);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(com.jpdev01.rinha.jooq.tables.pojos.Payments value) {
        super(Payments.PAYMENTS);

        if (value != null) {
            setCorrelationId(value.getCorrelationId());
            setAmount(value.getAmount());
            setRequestedAt(value.getRequestedAt());
            setProcessedAtDefault(value.getProcessedAtDefault());
            resetChangedOnNotNull();
        }
    }
}
